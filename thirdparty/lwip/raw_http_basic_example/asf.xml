<asf xmlversion="1.0">
	<select-by-device id="thirdparty.lwip.raw_basic_http_example" caption="lwIP TCP/IP Stack basic HTTP example using Raw API">
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#sam3x" caption="lwIP TCP/IP Stack basic HTTP example using Raw API">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="sam3x"/>
			<require idref="sam.utils.cmsis.sam3x.source.template"/>
			<require idref="sam.components.ethernet_phy.dm9161a"/>
			<require idref="sam.drivers.emac"/>
			<require idref="sam.drivers.uart"/>
			<require idref="common.services.ioport"/>
			<require idref="common.services.basic.clock"/>
			<require idref="common.utils.stdio.stdio_serial"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#sam4s_ek" caption="lwIP TCP/IP Stack basic HTTP example using Raw API (with Micrel KSZ8851SNL PHY)">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
				This example uses the Micrel KSZ8851SNL PHY for the MAC support.
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="sam4s"/>
			<require idref="sam.utils.cmsis.sam4s.source.template"/>
			<require idref="sam.drivers.uart"/>
			<require idref="common.services.ioport"/>
			<require idref="common.services.basic.clock"/>
			<require idref="common.utils.stdio.stdio_serial"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#samd20_xplained_pro" caption="lwIP TCP/IP Stack basic HTTP example using Raw API (with Micrel KSZ8851SNL PHY)">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
				This example uses the Micrel KSZ8851SNL PHY from the Ethernet Xplained Pro extension.
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example_samd20.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="samd20"/>
			<require idref="sam0.drivers.sercom.usart"/>
			<require idref="sam0.utils.stdio.stdio_serial"/>
			<require idref="common2.services.delay"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#sam4e" caption="lwIP TCP/IP Stack basic HTTP example using Raw API">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="sam4e"/>
			<require idref="sam.utils.cmsis.sam4e.source.template"/>
			<require idref="sam.components.ethernet_phy.ksz8051mnl"/>
			<require idref="sam.drivers.uart"/>
			<require idref="common.services.ioport"/>
			<require idref="common.services.basic.clock"/>
			<require idref="common.utils.stdio.stdio_serial"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#samv71" caption="lwIP TCP/IP Stack basic HTTP example using Raw API">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="samv71"/>
			<require idref="sam.utils.cmsis.samv71.source.template"/>
			<require idref="sam.components.ethernet_phy.ksz8061rnb"/>
			<require idref="sam.drivers.uart"/>
			<require idref="common.services.ioport"/>
			<require idref="common.services.basic.clock"/>
			<require idref="common.utils.stdio.stdio_serial"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
		<module type="application" id="thirdparty.lwip.raw_basic_http_example#same70" caption="lwIP TCP/IP Stack basic HTTP example using Raw API">
			<info type="description" value="summary">
				Basic HTTP web server using the lwIP TCP/IP stack Raw API in standalone mode (i.e. without RTOS support).
			</info>
			<info type="keyword" value="technology">
				<keyword value="Communication"/>
			</info>
			<build type="include-path" value="."/>
			<build type="include-path" value="network"/>
			<build type="include-path" value="network/httpserver"/>
			<build type="c-source" value="raw_http_basic_example.c"/>
			<build type="c-source" value="network/ethernet.c"/>
			<build type="header-file" value="network/ethernet.h"/>
			<build type="c-source" value="network/timer_mgt.c"/>
			<build type="header-file" value="network/timer_mgt.h"/>
			<build type="c-source" value="network/httpserver/fs.c"/>
			<build type="header-file" value="network/httpserver/fs.h"/>
			<build type="c-source" value="network/httpserver/fsdata.c"/>
			<build type="header-file" value="network/httpserver/fsdata.h"/>
			<build type="c-source" value="network/httpserver/httpd.c"/>
			<build type="header-file" value="network/httpserver/httpd.h"/>
			<device-support value="same70"/>
			<require idref="sam.utils.cmsis.same70.source.template"/>
			<require idref="sam.components.ethernet_phy.ksz8081rna"/>
			<require idref="sam.drivers.uart"/>
			<require idref="common.services.ioport"/>
			<require idref="common.services.basic.clock"/>
			<require idref="common.utils.stdio.stdio_serial"/>
			<require idref="thirdparty.lwip.version"/>
			<info type="gui-flag" value="move-to-root"/>
		</module>
	</select-by-device>
</asf>
